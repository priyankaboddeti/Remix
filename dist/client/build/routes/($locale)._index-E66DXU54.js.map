{
  "version": 3,
  "sources": ["../../../../app/routes/($locale)._index.jsx"],
  "sourcesContent": ["import {defer} from '@shopify/remix-oxygen';\nimport {Await, useLoaderData, Link} from '@remix-run/react';\nimport {Suspense} from 'react';\nimport {Image, Money} from '@shopify/hydrogen';\n\n/**\n * @type {MetaFunction}\n */\nexport const meta = () => {\n  return [{title: 'Hydrogen | Home'}];\n};\n\n/**\n * @param {LoaderFunctionArgs}\n */\nexport async function loader({context}) {\n  const {storefront} = context;\n  const {collections} = await storefront.query(FEATURED_COLLECTION_QUERY);\n  const featuredCollection = collections.nodes[0];\n  const recommendedProducts = storefront.query(RECOMMENDED_PRODUCTS_QUERY);\n\n  return defer({featuredCollection, recommendedProducts});\n}\n\nexport default function Homepage() {\n  /** @type {LoaderReturnData} */\n  const data = useLoaderData();\n  return (\n    <div className=\"home\">\n      <FeaturedCollection collection={data.featuredCollection} />\n      <RecommendedProducts products={data.recommendedProducts} />\n    </div>\n  );\n}\n\n/**\n * @param {{\n *   collection: FeaturedCollectionFragment;\n * }}\n */\nfunction FeaturedCollection({collection}) {\n  if (!collection) return null;\n  const image = collection?.image;\n  return (\n    <Link\n      className=\"featured-collection\"\n      to={`/collections/${collection.handle}`}\n    >\n      {image && (\n        <div className=\"featured-collection-image\">\n          <Image data={image} sizes=\"100vw\" />\n        </div>\n      )}\n      <h1>{collection.title}</h1>\n    </Link>\n  );\n}\n\n/**\n * @param {{\n *   products: Promise<RecommendedProductsQuery>;\n * }}\n */\nfunction RecommendedProducts({products}) {\n  return (\n    <div className=\"recommended-products\">\n      <h2>Recommended Products</h2>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Await resolve={products}>\n          {({products}) => (\n            <div className=\"recommended-products-grid\">\n              {products.nodes.map((product) => (\n                <Link\n                  key={product.id}\n                  className=\"recommended-product\"\n                  to={`/products/${product.handle}`}\n                >\n                  <Image\n                    data={product.images.nodes[0]}\n                    aspectRatio=\"1/1\"\n                    sizes=\"(min-width: 45em) 20vw, 50vw\"\n                  />\n                  <h4>{product.title}</h4>\n                  <small>\n                    <Money data={product.priceRange.minVariantPrice} />\n                  </small>\n                </Link>\n              ))}\n            </div>\n          )}\n        </Await>\n      </Suspense>\n      <br />\n    </div>\n  );\n}\n\nconst FEATURED_COLLECTION_QUERY = `#graphql\n  fragment FeaturedCollection on Collection {\n    id\n    title\n    image {\n      id\n      url\n      altText\n      width\n      height\n    }\n    handle\n  }\n  query FeaturedCollection($country: CountryCode, $language: LanguageCode)\n    @inContext(country: $country, language: $language) {\n    collections(first: 1, sortKey: UPDATED_AT, reverse: true) {\n      nodes {\n        ...FeaturedCollection\n      }\n    }\n  }\n`;\n\nconst RECOMMENDED_PRODUCTS_QUERY = `#graphql\n  fragment RecommendedProduct on Product {\n    id\n    title\n    handle\n    priceRange {\n      minVariantPrice {\n        amount\n        currencyCode\n      }\n    }\n    images(first: 1) {\n      nodes {\n        id\n        url\n        altText\n        width\n        height\n      }\n    }\n  }\n  query RecommendedProducts ($country: CountryCode, $language: LanguageCode)\n    @inContext(country: $country, language: $language) {\n    products(first: 4, sortKey: UPDATED_AT, reverse: true) {\n      nodes {\n        ...RecommendedProduct\n      }\n    }\n  }\n`;\n\n/** @typedef {import('@shopify/remix-oxygen').LoaderFunctionArgs} LoaderFunctionArgs */\n/** @template T @typedef {import('@remix-run/react').MetaFunction<T>} MetaFunction */\n/** @typedef {import('storefrontapi.generated').FeaturedCollectionFragment} FeaturedCollectionFragment */\n/** @typedef {import('storefrontapi.generated').RecommendedProductsQuery} RecommendedProductsQuery */\n/** @typedef {import('@shopify/remix-oxygen').SerializeFrom<typeof loader>} LoaderReturnData */\n"],
  "mappings": "kMAEA,IAAAA,EAAuB,OA0BnB,IAAAC,EAAA,OApBSC,EAAO,IACX,CAAC,CAAC,MAAO,iBAAiB,CAAC,EAerB,SAARC,GAA4B,CAEjC,IAAMC,EAAOC,EAAc,EAC3B,SACE,QAAC,OAAI,UAAU,OACb,oBAACC,EAAA,CAAmB,WAAYF,EAAK,mBAAoB,KACzD,OAACG,EAAA,CAAoB,SAAUH,EAAK,oBAAqB,GAC3D,CAEJ,CAOA,SAASE,EAAmB,CAAC,WAAAE,CAAU,EAAG,CACxC,GAAI,CAACA,EAAY,OAAO,KACxB,IAAMC,EAAQD,GAAY,MAC1B,SACE,QAACE,EAAA,CACC,UAAU,sBACV,GAAI,gBAAgBF,EAAW,SAE9B,UAAAC,MACC,OAAC,OAAI,UAAU,4BACb,mBAACE,EAAA,CAAM,KAAMF,EAAO,MAAM,QAAQ,EACpC,KAEF,OAAC,MAAI,SAAAD,EAAW,MAAM,GACxB,CAEJ,CAOA,SAASD,EAAoB,CAAC,SAAAK,CAAQ,EAAG,CACvC,SACE,QAAC,OAAI,UAAU,uBACb,oBAAC,MAAG,gCAAoB,KACxB,OAAC,YAAS,YAAU,OAAC,OAAI,sBAAU,EACjC,mBAACC,EAAA,CAAM,QAASD,EACb,UAAC,CAAC,SAAAA,CAAQ,OACT,OAAC,OAAI,UAAU,4BACZ,SAAAA,EAAS,MAAM,IAAKE,MACnB,QAACJ,EAAA,CAEC,UAAU,sBACV,GAAI,aAAaI,EAAQ,SAEzB,oBAACH,EAAA,CACC,KAAMG,EAAQ,OAAO,MAAM,CAAC,EAC5B,YAAY,MACZ,MAAM,+BACR,KACA,OAAC,MAAI,SAAAA,EAAQ,MAAM,KACnB,OAAC,SACC,mBAACC,EAAA,CAAM,KAAMD,EAAQ,WAAW,gBAAiB,EACnD,IAZKA,EAAQ,EAaf,CACD,EACH,EAEJ,EACF,KACA,OAAC,OAAG,GACN,CAEJ",
  "names": ["import_react", "import_jsx_runtime", "meta", "Homepage", "data", "useLoaderData", "FeaturedCollection", "RecommendedProducts", "collection", "image", "Link", "Image", "products", "Await", "product", "Money"]
}
